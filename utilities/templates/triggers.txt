(cd {heimdall_dir}
modeldir=$HOME/keras_models
ML_GPUs=0

# remove old data/plots
rm -f {heimdall_dir}/*pdf {heimdall_dir}/*hdf5 {heimdall_dir}/plots/*pdf {heimdall_dir}/data/*hdf5

# Check filterbank exists
if [ ! -f {filfile} ]; then
    echo "WARNING: filterbank file {filfile} does not exist, skipping CB{CB:02d}"
    touch {result_dir}/CB{CB:02d}.beam_missing.pdf
    exit
fi

# Check filterbank size (at least 10s expected)
min_size=$(({nchan}*{page_size}*10*1000/1024))
size=$(stat --printf="%s" {filfile})
if [ $size -lt $min_size ]; then
    echo "WARNING: size of {filfile} is $size, skipping CB{CB:02d}"
    touch {result_dir}/CB{CB:02d}.beam_missing.pdf
    exit
fi

# Run trigger clustering
python $HOME/software/arts-analysis/triggers.py $arg --beamno {CB:02d} --mk_plot --dm_min {dmmin} --dm_max {dmmax} --sig_thresh {snrmin} --ndm 64 --save_data concat --nfreq_plot 32 --ntime_plot 64 --cmap viridis --outdir={heimdall_dir} {filfile} CB{CB:02d}.cand 2>&1
# check candidates
if [ ! -f {heimdall_dir}/grouped_pulses.singlepulse ]; then
    echo "WARNING: grouped_pulses.singlepulse missing"
    touch {result_dir}/CB{CB:02d}.grouping_failed.pdf
    exit
fi
ncand_grouped=$(wc -l {heimdall_dir}/grouped_pulses.singlepulse | awk '{{print $1}}')
if [ "$ncand_grouped" == "0" ]; then
    echo "WARNING: no candidates after grouping"
    touch {result_dir}/CB{CB:02d}.no_cands_after_grouping.pdf
    exit
fi

# Run classifier in python 3
source $HOME/python/bin/activate
export CUDA_VISIBLE_DEVICES=$ML_GPUs
python $HOME/software/single_pulse_ml/single_pulse_ml/classify.py --fn_model_dm $modeldir/heimdall_dm_time.hdf5 --fn_model_time $modeldir/heimdall_b0329_mix_147411d_time.hdf5 --pthresh {pthresh} --save_ranked --plot_ranked --fnout=ranked_CB{CB:02d} {heimdall_dir}/data/data_full.hdf5 $modeldir/august18_heimdall_crab_simfreq_time.hdf5 2>&1
deactivate
# Check classifier output
if [ ! -f {heimdall_dir}/ranked_CB{CB:02d}_freq_time.hdf5 ]; then
    echo "WARNING: classifier output missing"
    touch {result_dir}/CB{CB:02d}.classifier_failed.pdf
    exit
fi
# get number of candidates output by classifier
ncandML=$($HOME/ARTS-obs/utilities/get_nitem_hdf5.py ranked_CB{CB:02d}_freq_time.hdf5)
echo $ncandML > ncandML.txt
# Create one pdf per CB
if [ "$ncandML" == "0" ]; then
    echo "WARNING: no candidates after classifier"
    touch {result_dir}/CB{CB:02d}.nocands.pdf
    exit
fi
gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile={result_dir}/CB{CB:02d}.pdf {heimdall_dir}/*pdf 2>&1
) > {result_dir}/CB{CB:02d}_trigger.log
